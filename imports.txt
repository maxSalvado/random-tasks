import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';
import { IonicModule } from '@ionic/angular';

@Component({
  selector: 'app-customer-form',
  standalone: true,
  imports: [IonicModule, ReactiveFormsModule],
  templateUrl: './customer-form.component.html',
})
export class CustomerFormComponent implements OnInit {
  form!: FormGroup;

  constructor(private fb: FormBuilder) {}

  ngOnInit() {
    this.form = this.fb.group({
      companyName: ['', Validators.required],
      contactEmail: ['', [Validators.required, Validators.email]],
      accountManager: ['', Validators.required],
      customerNeeds: ['', Validators.required],
      additionalDetails: [''],
      leadOrigins: [''],
      currentStatus: [''],
    });
  }

  onSubmit() {
    if (this.form.valid) {
      console.log('✅ Form submitted:', this.form.value);
    } else {
      console.warn('⚠️ Form is invalid');
      this.form.markAllAsTouched();
    }
  }
}





---------------------------------------------------




<ion-header>
  <ion-toolbar>
    <ion-title>Customer Form</ion-title>
  </ion-toolbar>
</ion-header>

<ion-content class="ion-padding">
  <form [formGroup]="form" (ngSubmit)="onSubmit()">
    <ion-list lines="full">
      <!-- Company Name -->
      <ion-item>
        <ion-label position="floating">Company Name *</ion-label>
        <ion-input formControlName="companyName" required></ion-input>
      </ion-item>

      <!-- Contact Email -->
      <ion-item>
        <ion-label position="floating">Contact Email *</ion-label>
        <ion-input type="email" formControlName="contactEmail" required></ion-input>
      </ion-item>

      <!-- Account Manager -->
      <ion-item>
        <ion-label position="floating">Account Manager Name *</ion-label>
        <ion-input formControlName="accountManager" required></ion-input>
      </ion-item>

      <!-- Customer Needs -->
      <ion-item>
        <ion-label position="floating">Customer Needs *</ion-label>
        <ion-textarea formControlName="customerNeeds" required></ion-textarea>
      </ion-item>

      <!-- Additional Details -->
      <ion-item>
        <ion-label position="floating">Additional Details</ion-label>
        <ion-textarea formControlName="additionalDetails"></ion-textarea>
      </ion-item>

      <!-- Lead Origins -->
      <ion-item>
        <ion-label position="floating">Lead Origins</ion-label>
        <ion-input formControlName="leadOrigins"></ion-input>
      </ion-item>

      <!-- Current Status -->
      <ion-item>
        <ion-label>Current Status</ion-label>
        <ion-select formControlName="currentStatus" placeholder="Select status">
          <ion-select-option value="new">New</ion-select-option>
          <ion-select-option value="contacted">Contacted</ion-select-option>
          <ion-select-option value="qualified">Qualified</ion-select-option>
          <ion-select-option value="closed">Closed</ion-select-option>
        </ion-select>
      </ion-item>
    </ion-list>

    <!-- Submit Button -->
    <ion-button expand="block" type="submit" [disabled]="form.invalid">
      Submit
    </ion-button>
  </form>
</ion-content>











------------------------------------------------------






UNDER INPUT:

<ion-note color="danger" *ngIf="form.get('companyName')?.touched && form.get('companyName')?.invalid">
  Company Name is required.
</ion-note>
