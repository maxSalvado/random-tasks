# vars
export REGION_PUB=us-east-1
export PUBLIC_REPO_NAME=monabot-api
export TAG="v$(date +%Y%m%d-%H%M)"

# isolated docker config (bypasses Windows cred helper)
mkdir -p ~/.docker-ecrpub
printf '{ "auths": {} }\n' > ~/.docker-ecrpub/config.json

# login to public ECR
DOCKER_CONFIG=~/.docker-ecrpub \
aws ecr-public get-login-password --region "$REGION_PUB" \
| DOCKER_CONFIG=~/.docker-ecrpub docker login --username AWS --password-stdin public.ecr.aws

# find your canonical repo URI
PUBLIC_REPO_URI=$(
  aws ecr-public describe-repositories --region "$REGION_PUB" \
  --repository-names "$PUBLIC_REPO_NAME" \
  --query 'repositories[0].repositoryUri' --output text
)

# build / tag / push
docker build -t "$PUBLIC_REPO_NAME:$TAG" .
docker tag   "$PUBLIC_REPO_NAME:$TAG" "$PUBLIC_REPO_URI:$TAG"
DOCKER_CONFIG=~/.docker-ecrpub docker push "$PUBLIC_REPO_URI:$TAG"

echo "Pushed: $PUBLIC_REPO_URI:$TAG"



------



# fill your ECS identifiers
export CLUSTER="<your-ecs-cluster>"
export SERVICE="<your-ecs-service>"
export CONTAINER_NAME="<your-container-name>"

# current task def
TD_ARN=$(aws ecs describe-services --cluster "$CLUSTER" --services "$SERVICE" \
  --query "services[0].taskDefinition" --output text)

# fetch body
aws ecs describe-task-definition --task-definition "$TD_ARN" \
  --query "taskDefinition" > td.json

# swap image to the new public tag
jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' td.json \
| jq --arg name "$CONTAINER_NAME" --arg img "$PUBLIC_REPO_URI:$TAG" \
     '.containerDefinitions = (.containerDefinitions
        | map(if .name == $name then .image = $img | . else . end))' \
> td.updated.json

# register + roll
NEW_TD_ARN=$(aws ecs register-task-definition \
  --cli-input-json file://td.updated.json \
  --query "taskDefinition.taskDefinitionArn" --output text)

aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$NEW_TD_ARN" >/dev/null
aws ecs wait services-stable --cluster "$CLUSTER" --services "$SERVICE"
